pipeline {
    agent any

    stages {
        stage('Install Terraform if not installed'){
            steps{
                sh '''
                which terraform || \
                wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg &&
                echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list &&
                sudo apt update && sudo apt install -y terraform &&
                terraform --version '''
            }
        }
        stage('User Input') {
            steps {
                script {
                    def userChoice = input(
                        message: 'Select an action for Terraform to apply or destroy Jenkins Nexus servers:',
                        parameters: [
                            choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Choose apply to provision the servers or destroy to remove the existing resources.')
                        ]
                    )
                    env.ACTION = userChoice
                }
            }
        }
        
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/krithikasharma-OT/TerraformJenkinsNexus.git'
            }
        }

        stage('Init') {
             when {
                allOf {
                    expression { env.ACTION == 'apply' }
                }
            }
            steps {
                withCredentials([
                    string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY'),
                    string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_KEY')
                ]) {
                    sh '''
                    export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY
                    export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_KEY

                    terraform init
                    '''
                }
            }
        }

        stage('Validate') {
             when {
                allOf {
                    expression { env.ACTION == 'apply' }
                }
            }
            steps {
                sh 'terraform validate'
            }
        }

        stage('Plan') {
             when {
                allOf {
                    expression { env.ACTION == 'apply' }
                }
            }
            steps {
                sh 'terraform plan -out=tfplan'
            }
        }

        stage('Apply') {
             when {
                allOf {
                    expression { env.ACTION == 'apply' }
                }
            }
            steps {
                sh 'terraform apply tfplan -auto-approve'
            }
        }
        
        
        stage('Destroy') {
             when {
                allOf {
                    expression { env.ACTION == 'destroy' }
                }
            }
            steps {
                sh 'terraform destroy -auto-approve'
            }
        }
        
        
        /*
        stage('Destroy') {
             when {
                allOf {
                    expression { env.ACTION == 'destroy' }
                }
            }
            steps {
                sh 'terraform destroy -target=aws_instance.jenkins -auto-approve'
                sh 'terraform apply -target=aws_instance.jenkins -auto-approve'
            }
        }
        */
    }
}
